{"version":3,"file":"component---src-pages-index-tsx-646bbf03bf3b53d73b39.js","mappings":"8NA4CA,MA9BsBA,IACpBC,EAAAA,cAACC,EAAAA,YAAW,CACVC,MAAK,aAYLC,OAASC,IACP,MAAM,YAACC,EAAW,OAAEC,GAAUF,EAAKG,KAAKC,aACxC,OACER,EAAAA,cAAA,WACEA,EAAAA,cAAA,UAAKK,GACLL,EAAAA,cAAA,SAAG,aAEDA,EAAAA,cAAA,WACAA,EAAAA,cAAA,KAAGS,KAAMH,EAAOI,QAAQ,YAEtB,ICkDd,MA7E+BC,IAAY,IAAX,KAACP,GAAKO,EACpC,MAAMC,EAAYR,EAAKG,KAAKC,aAAaK,MACnCC,EAAQV,EAAKW,kBAAkBC,MAErC,OACEhB,EAAAA,cAACiB,EAAAA,EAAM,CAACJ,MAAOD,GACbZ,EAAAA,cAACkB,EAAAA,EAAI,CAACL,MAAM,YAAYM,SAAU,CAAC,OAAD,iCAClCnB,EAAAA,cAACD,EAAG,MACJC,EAAAA,cAAA,eACEA,EAAAA,cAAA,OAAKoB,UAAS,gBACXN,EAAMO,KAAIC,IAAY,IAAX,KAACC,GAAKD,EAChB,MAAMT,EAAQU,EAAKC,YAAYX,OAASU,EAAKE,OAAOC,KACpD,OACE1B,EAAAA,cAAA,OAAK2B,IAAKJ,EAAKE,OAAOC,MACpB1B,EAAAA,cAAA,UACEA,EAAAA,cAAC4B,EAAAA,KAAI,CAACC,GAAIN,EAAKE,OAAOC,MAAOb,IAE/Bb,EAAAA,cAAA,aAAQuB,EAAKC,YAAYM,MACzB9B,EAAAA,cAAA,KAAG+B,wBAAyB,CAACC,OAAQT,EAAKU,WACtC,MAKP,C","sources":["webpack://gatsby-starter-default/./src/components/bio.tsx","webpack://gatsby-starter-default/./src/pages/index.tsx"],"sourcesContent":["import React from 'react'\nimport {StaticQuery, graphql} from 'gatsby'\n\ntype StaticQueryData = {\n  site: {\n    siteMetadata: {\n      description: string\n      social: {\n        twitter: string\n      }\n    }\n  }\n}\n\nconst Bio: React.FC = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        site {\n          siteMetadata {\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `}\n    render={(data: StaticQueryData): React.ReactElement | null => {\n      const {description, social} = data.site.siteMetadata\n      return (\n        <div>\n          <h1>{description}</h1>\n          <p>\n            By Half BS\n            <br />\n            <a href={social.github}>Twitter</a>\n          </p>\n        </div>\n      )\n    }}\n  />\n)\n\nexport default Bio","import React from 'react'\nimport {Link, graphql} from 'gatsby'\n\nimport Layout from '../components/layout'\nimport Head from '../components/head'\nimport Bio from '../components/bio'\n\ninterface Props {\n  readonly data: PageQueryData\n}\n\nconst Index: React.FC<Props> = ({data}) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n\n  return (\n    <Layout title={siteTitle}>\n      <Head title=\"All posts\" keywords={[`blog`, `gatsby`, `javascript`, `react`]} />\n      <Bio />\n      <article>\n        <div className={`page-content`}>\n          {posts.map(({node}) => {\n            const title = node.frontmatter.title || node.fields.slug\n            return (\n              <div key={node.fields.slug}>\n                <h3>\n                  <Link to={node.fields.slug}>{title}</Link>\n                </h3>\n                <small>{node.frontmatter.date}</small>\n                <p dangerouslySetInnerHTML={{__html: node.excerpt}} />\n              </div>\n            )\n          })}\n        </div>\n      </article>\n    </Layout>\n  )\n}\n\ninterface PageQueryData {\n  site: {\n    siteMetadata: {\n      title: string\n    }\n  }\n  allMarkdownRemark: {\n    edges: {\n      node: {\n        excerpt: string\n        fields: {\n          slug: string\n        }\n        frontmatter: {\n          date: string\n          title: string\n        }\n      }\n    }[]\n  }\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: {frontmatter: {published: {ne: false}}}\n      sort: {fields: [frontmatter___date], order: DESC}\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Index"],"names":["Bio","React","StaticQuery","query","render","data","description","social","site","siteMetadata","href","github","_ref","siteTitle","title","posts","allMarkdownRemark","edges","Layout","Head","keywords","className","map","_ref2","node","frontmatter","fields","slug","key","Link","to","date","dangerouslySetInnerHTML","__html","excerpt"],"sourceRoot":""}