{"version":3,"file":"component---src-pages-tags-tsx-dc1c99a9ee9e445c36b3.js","mappings":"wLAuEA,UA7D8BA,IAAY,IAAX,KAACC,GAAKD,EACnC,MAAME,EAAYD,EAAKE,KAAKC,aAAaC,MACnCC,EAAQL,EAAKM,mBAAqBN,EAAKM,kBAAkBD,MAE/D,OACEE,EAAAA,cAACC,EAAAA,EAAM,CAACJ,MAAOH,GACbM,EAAAA,cAACE,EAAAA,EAAI,CAACL,MAAM,WAAWM,SAAU,CAAC,OAAD,iCACjCH,EAAAA,cAAA,eACEA,EAAAA,cAAA,UAAI,YACJA,EAAAA,cAAA,OAAKI,UAAS,gBACXN,GACCA,EAAMO,KACJC,GACEA,GACEN,EAAAA,cAAA,OAAKO,IAAKD,EAAIE,YACZR,EAAAA,cAAA,UACEA,EAAAA,cAACS,EAAAA,KAAI,CAACC,GAAE,SAAWJ,EAAIE,WAAU,KAAMF,EAAIE,aAE7CR,EAAAA,cAAA,aACGM,EAAIK,WAAW,QACI,IAAnBL,EAAIK,WAAmB,GAAK,UAOtC,C","sources":["webpack://gatsby-starter-default/./src/pages/tags.tsx"],"sourcesContent":["import React from 'react'\nimport {Link, graphql} from 'gatsby'\n\nimport Layout from '../components/layout'\nimport Head from '../components/head'\n\ninterface Props {\n  readonly data: PageQueryData\n}\n\nconst Tags: React.FC<Props> = ({data}) => {\n  const siteTitle = data.site.siteMetadata.title\n  const group = data.allMarkdownRemark && data.allMarkdownRemark.group\n\n  return (\n    <Layout title={siteTitle}>\n      <Head title=\"All tags\" keywords={[`blog`, `gatsby`, `javascript`, `react`]} />\n      <article>\n        <h1>All tags</h1>\n        <div className={`page-content`}>\n          {group &&\n            group.map(\n              tag =>\n                tag && (\n                  <div key={tag.fieldValue}>\n                    <h3>\n                      <Link to={`/tags/${tag.fieldValue}/`}>{tag.fieldValue}</Link>\n                    </h3>\n                    <small>\n                      {tag.totalCount} post\n                      {tag.totalCount === 1 ? '' : 's'}\n                    </small>\n                  </div>\n                ),\n            )}\n        </div>\n      </article>\n    </Layout>\n  )\n}\n\ninterface PageQueryData {\n  site: {\n    siteMetadata: {\n      title: string\n    }\n  }\n  allMarkdownRemark: {\n    group: {\n      fieldValue: string\n      totalCount: number\n    }[]\n  }\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(filter: {frontmatter: {published: {ne: false}}}) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n\nexport default Tags"],"names":["_ref","data","siteTitle","site","siteMetadata","title","group","allMarkdownRemark","React","Layout","Head","keywords","className","map","tag","key","fieldValue","Link","to","totalCount"],"sourceRoot":""}